---
- name: Set up server
  hosts: sample-server
  roles:
    - role: docker
      vars:
        docker_compose_dest: /usr/local/bin
      tags:
        - centos
    - role: mongodb-replicaset
      vars:
        remote_config_dir: /root/mongodb-repl
        dockerfile_path: "{{ lookup('env','PWD') }}/config/mongo/Dockerfile"
        docker_compose_path: "{{ lookup('env', 'PWD') }}/config/mongo/docker-compose.yml"
        keyfile_mongo_image_name: "mongo-keyfile"
        docker_secrets_path: "{{ lookup('env', 'PWD') }}/config/mongo/docker-secrets.env"
        mongo_config:
          - port: 27017
            priority: 10
            arbiter: no
          - port: 27018
            priority: 9
            arbiter: no
          - port: 27019
            priority: 8
            arbiter: yes
        root_domain: db.example.com
        remote_docker_compose_exec: "/usr/local/bin/docker-compose"
        mongo_rs_id: rs
        s3_backup_bucket: db-backup
        aws_dir: /root/.aws
        remote_backup_dir: /root/mongodb-repl/backup
        aws_profile: profile
    - role: aws-cli
      vars:
        aws_cli_install_dir: /usr/local/aws-cli
        aws_cli_bin: /usr/local/bin/aws
        aws_profile: profile-name
        aws_region: ap-southeast-1
        ec2_instance_role_arn: arn:aws:iam::<account_id>:role/<role_name>
        aws_dir: /root/.aws
      tags:
        - ec2
    - role: cron-tab
      vars:
        cron_config_file: "{{ lookup('env','PWD') }}/config/crons/cron-config.yml"